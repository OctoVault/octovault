apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "octovault.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "octovault.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "octovault.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "octovault.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ default (include "octovault.fullname" .) .Values.serviceAccount.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: manager
          image: "{{ .Values.image.repository }}:{{ include "octovault.imageTag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--leader-elect={{ .Values.leaderElection.enabled }}"
            - "--health-probe-bind-address={{ .Values.controller.probes.healthz }}"
            {{- if .Values.controller.metrics.enabled }}
            - "--metrics-secure={{ .Values.controller.metrics.secure }}"
            - "--metrics-bind-address=:{{ .Values.controller.metrics.port }}"
            {{- else }}
            - "--metrics-bind-address=0"
            {{- end }}
            - "--enable-http2={{ .Values.controller.enableHTTP2 }}"
            {{- range .Values.controller.extraArgs }}
            - "{{ . }}"
            {{- end }}
          env:
            - name: OVO_OCTOREPO_POLL_INTERVAL
              value: "{{ .Values.controller.env.OVO_OCTOREPO_POLL_INTERVAL }}"
            {{- if .Values.controller.env.AWS_REGION }}
            - name: AWS_REGION
              value: "{{ .Values.controller.env.AWS_REGION }}"
            {{- end }}
            {{- range .Values.controller.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          ports:
            - name: healthz
              containerPort: {{ (trimPrefix ":" (.Values.controller.probes.healthz | default ":8081") | int) }}
            {{- if .Values.controller.metrics.enabled }}
            - name: {{ ternary "https-metrics" "http-metrics" .Values.controller.metrics.secure }}
              containerPort: {{ .Values.controller.metrics.port }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if and .Values.controller.metrics.enabled .Values.metrics.existingSecret }}
            - name: metrics-certs
              mountPath: {{ .Values.metrics.certPath }}
              readOnly: true
            {{- end }}
            {{- with .Values.controller.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- if and .Values.controller.metrics.enabled .Values.metrics.existingSecret }}
        - name: metrics-certs
          secret:
            secretName: {{ .Values.metrics.existingSecret }}
        {{- end }}
        {{- with .Values.controller.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
